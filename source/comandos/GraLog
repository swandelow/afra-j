#!/bin/bash

#funcion que imprime el correcto uso de la herramienta
function printUsage {
	echo "wrong usage"
	echo "usage:"
	echo "GraLog <command name> <message> <type>"
	echo "type can be:"
	echo "INFO informative"
	echo "WAR warning"
	echo "ERROR error"
	
}

#asegura que tenga los tres parametros requeridos
if [ $# -ne 3 ]
then
	printUsage
	exit 1
fi

#asegura que el tipo del mensaje este entre los mensajes soportados
if [ $3 != "INFO" ] && [ $3 != "WAR" ] && [ $3 != "ERROR" ]
then
	printUsage
	exit 1
fi

logExt="$LOGEXT"

#path de la carpeta de logueo
logPath="$LOGDIR"/
message=$2
sizeLimit="$LOGSIZE"
if [ -z $sizeLimit ]; then
	sizeLimit=400
fi
sizeLimit=$(($sizeLimit * 1024))
filename="$1.$logExt"
file="$logPath$filename"
msgType=$3
date=$(date +"%F %T")
login=$(whoami)

# AFINSTAL no loguea en LOGDIR
# la extension es "lg" en este caso
if [[ $message == "AFINSTAL" ]]
then
	logPath="$grupo/conf"
	logExt="lg"
fi

if [ -e $file ]
then
	# si existe, obtiene el tamanio del archivo
	filesize=$(stat -c%s "$file")

	if [ $filesize -gt $sizeLimit ]
	then
		# si se supera el limite trunca el archivo a las ultimas 50 lineas
		echo "Log $filename excedido."
		echo filesize: "$filesize"
		echo sizeLimit: "$sizeLimit"
		tail -n 50 "$file" > "$file.tmp"
		cat "$file.tmp" > "$file" 
		rm "$file.tmp"
	fi
else
	touch $file
	chmod +w+r $file
fi


#escribe en el archivo
echo "$date $login $1 $msgType : $message" >> "$file"

exit 0
